<!-- 	prevent sql injection 		http://www.codeproject.com/Articles/9378/SQL-Injection-Attacks-and-Some-Tips-on-How-to-Prev	prevent session hijacking  	http://phpsec.org/projects/guide/4.html--><!-- http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml --><!DOCTYPE html><?php 	require_once(__DIR__.'/ConnectToDatabase.php');	function addUser($user) {		$statementCheck = 'SELECT count(user) FROM active_users WHERE user="'.$user.'"';		$resultCheck = mysql_query($statementCheck);		$rowCheck = mysql_fetch_array($resultCheck);		if(!$rowCheck[0]) {			$statementAdd = 'INSERT INTO active_users(user) VALUES("'.$user.'")';			$resultCheck = mysql_query($statementAdd);		}	}	if (!empty($_GET['user'])) {		$user = $_GET['user'];	} else {		$user = "dtest";	}	addUser($user);?> <script src="Utilities.js"></script><script> //http://stackoverflow.com/questions/547384/where-do-you-include-the-jquery-library-from-google-jsapi-cdn    document.write([        "\<script src='",        ("https:" == document.location.protocol) ? "https://" : "http://",        "ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js' type='text/javascript'>\<\/script>" // https://developers.google.com/speed/libraries/devguide#jquery    ].join(''));</script><script>	var aiMode = 0;	var myColor;	var colorTurn = 'black';	var grid;	var user = '<?php echo $user; ?>';	var Point = (function() { // http://stackoverflow.com/questions/12610394/javascript-classes/12610555#12610555	    function Point(){	        this._state = undefined;	    };	    Point.prototype.getState = function() {	        return this._state;	    };	    Point.prototype.setState = function(state) {	        this._state = state;	    };	    return Point;	})();			function assert(condition, message) {		if(!condition) {			throw message || "Assertion failed";		}	}	function changeWhosMove() {		if(colorTurn == 'black') {			colorTurn = 'white';		} else {			colorTurn = 'black';		}	}	function checkConnectFive(selectedColor, selectedX, selectedY) {		var checkConnectFiveDirection = function(currentX, currentY, directionX, directionY) {			var nextX = currentX*1 + directionX*1; // http://stackoverflow.com/questions/4841373/how-to-force-js-to-do-math-instead-of-putting-two-strings-together			var nextY = currentY*1 + directionY*1;			if (nextX < 0 || nextX > 14 || nextY < 0 || nextY > 14) {				return 0;			}			if (selectedColor == grid[nextX][nextY].getState()) {				return checkConnectFiveDirection(nextX, nextY, directionX, directionY) + 1;			}			return 0;		}		if ((checkConnectFiveDirection(selectedX, selectedY, -1, 0) + checkConnectFiveDirection(selectedX, selectedY, 1, 0)) == 4 ||			(checkConnectFiveDirection(selectedX, selectedY, -1, 1) + checkConnectFiveDirection(selectedX, selectedY, 1, -1)) == 4 ||			(checkConnectFiveDirection(selectedX, selectedY, 0, 1) + checkConnectFiveDirection(selectedX, selectedY, 0, -1)) == 4 ||			(checkConnectFiveDirection(selectedX, selectedY, 1, 1) + checkConnectFiveDirection(selectedX, selectedY, -1, -1)) == 4) {			return true;		}		return false;	}	function createSSE() {		assert(!!window.EventSource); // http://stackoverflow.com/questions/9284664/double-exclamation-points		var source = new EventSource('Source.php'); //http://www.html5rocks.com/en/tutorials/eventsource/basics/		source.addEventListener('message', function(e) {			console.log(e.data);		}, false);		source.addEventListener('open', function(e) {			console.log("openned"); 		}, false);		source.addEventListener('error', function(e) {			if(e.readyState == EventSource.CLOSED) {				console.log("closed");			}		}, false);	}	function drawGrid(canvasId){		var canvas = document.getElementById(canvasId);		assert(!!canvas.getContext);		var ctx = canvas.getContext('2d');		var offset = 1;		ctx.lineWidth = 2;		for(var i = 0; i < 16; i++) {			ctx.beginPath();			ctx.moveTo(offset + 40*i, 0);			ctx.lineTo(offset + 40*i, 602);			ctx.stroke();		}		for(var i = 0; i < 16; i++) {			ctx.beginPath();			ctx.moveTo(0, offset + 40*i);			ctx.lineTo(602, offset + 40*i);			ctx.stroke();		}	}	function drawStars(canvasId) {		var mycanvas = document.getElementById(canvasId);		assert(!!mycanvas.getContext);		var ctx = mycanvas.getContext('2d');		ctx.fillRect(116, 116, 10, 10);			ctx.fillRect(116, 436, 10, 10);			ctx.fillRect(276, 276, 10, 10);		ctx.fillRect(436, 116, 10, 10);		ctx.fillRect(436, 436, 10, 10);	}	function getCurrentStone() {		return colorTurn;	}		function getCurrentStoneClass() {		if(colorTurn == 'black') {			return 'stone-black';		} 		return 'stone-white';	}	function getStoneElement(element) {		return $(element).find('div[id^="stone"]');	}	function getGridPoint(element) {		var x = parseInt($(element).attr('x'),10);		var y = parseInt($(element).attr('y'),10);		return grid[x][y];	}	function initialize() {		grid = new Array(15);		for(var i = 0; i < 15; i++) {			grid[i] = new Array(15);			for(var j = 0; j < 15; j++) {				grid[i][j] = new Point();			}		}	}	function updateActiveUser(active) {		$.ajax({			type: 'POST',			url: 'ActiveUsersManager.php',			data: 'query=updateActive&user=' + user + '&active=' + active,			success: function(result) {				// alert(result);			}		});		// alert('user=' + user + '&active=' + active);	}	function updateGames() {		$.ajax({			type: 'POST',			url: 'GamesManager.php',			data: 'query=updateActive&user=' + user + '&active=' + active,			success: function(result) {				//alert(result);			}		});		//alert('user=' + user + '&active=' + active);	}	window.onbeforeunload = function(e) { // user navigate away does not trigger 		updateActiveUser(false); 	}	$(document).ready(function() {		$('.label').click(			function() {				if(typeof(myColor) === 'undefined') {					$(this).html(user);					myColor = $(this).attr("color");				} else {					if(myColor == $(this).attr('color')) {						$(this).html($(this).attr("color"));						myColor = undefined;					}				}			}		);		$('.label').hover(			function() {				if(typeof(myColor) === 'undefined') {					$(this).css("text-shadow","0px 0px 5px #fff");				} else {					if(myColor == $(this).attr('color')) {						$(this).css("text-shadow","0px 0px 5px #fff");					}				}			},			function() {				$(this).css("text-shadow","");			}		);		$('.point').click(			function() {				var gridPoint = getGridPoint(this);				if(typeof(gridPoint.getState()) === 'undefined') {					gridPoint.setState(getCurrentStone());					getStoneElement(this).attr('class', getCurrentStoneClass());					if(checkConnectFive(colorTurn, $(this).attr('x'), $(this).attr('y'))) {						alert(colorTurn);					}					changeWhosMove();				}			}		);		$('.point').hover(			function() {				var $stoneElement = getStoneElement(this);				if($stoneElement.attr('class') == "stone-empty") {					getStoneElement(this).attr('class', getCurrentStoneClass());				}			},			function() {				var $stoneElement = getStoneElement(this);				if(typeof(getGridPoint(this).getState()) === 'undefined' && $stoneElement.attr('class') == getCurrentStoneClass()) {					getStoneElement(this).attr('class', 'stone-empty');				}			}		);		updateActiveUser(true);		drawGrid("board-canvas");		drawStars("board-canvas");		createSSE();		initialize();	});</script><link href='http://fonts.googleapis.com/css?family=Permanent+Marker' rel='stylesheet' type='text/css'> <!-- https://developers.google.com/fonts/docs/getting_started --><link href="omok.css" rel="stylesheet"> <!-- http://stackoverflow.com/questions/9943981/can-self-closing-link-tags-be-problematic --><meta charset="utf-8"> <!-- General Meta Rules - Encoding --><title>omok</title><div id="background"></div><div id="container">	<div id="menu">		<div id="menu-leftcontainer">		</div> 		<div id="board-container">			<canvas id="board-canvas" width="562" height="562"></canvas>			<table id="board-table" cellpadding="0" cellspacing="0"><?php	for($i = 0; $i < 15; $i++) {		echo '			<tr>		';		for($j = 0; $j < 15; $j++) {			echo '				<td>					<div id="point-'.$i.'-'.$j.'" class="point" x="'.$i.'" y="'.$j.'">						<div id="stone-'.$i.'-'.$j.'" class="stone-empty" x="'.$i.'" y="'.$j.'"></div>					</div>				</td>			';		}		echo '			</tr>		';	}?>			</table>		</div>		<div id="menu-rightcontainer">			<div id="label-black" class="label" color="black">				black			</div>			<div id="label-white" class="label" color="white">				white			</div>		</div>	</div></div>